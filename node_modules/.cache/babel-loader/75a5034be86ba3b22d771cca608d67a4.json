{"ast":null,"code":"var _jsxFileName = \"/home/mohitha/Desktop/assignment/src/components/input.js\";\nimport React, { Component } from 'react'; //mport Timepicker from 'react-time-picker'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Signup from './Signup/Signup'; //import moment from 'moment'\n\nimport './input.css';\n\nclass Input extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: '',\n      taskList: [],\n      starttime: \"10:00\",\n      endtime: \"10:00\",\n      date: new Date()\n    };\n\n    this.onChange = event => {\n      this.setState({\n        starttime: event.target.value\n      });\n    };\n\n    this.onChangeEnd = event => {\n      this.setState({\n        endtime: event.target.value\n      });\n    };\n\n    this.inputChangeHandler = input => {\n      this.setState({\n        task: input\n      });\n    };\n\n    this.handleChangedate = date => {\n      this.setState({\n        date: date\n      });\n    };\n\n    this.btnAddHandler = (inputTask, inputTime, endtime) => {\n      let item = {\n        value: inputTask,\n        starttime: inputTime,\n        endtime: endtime,\n        diff: endtime - inputTime\n      };\n      let newList = [...this.state.taskList, item];\n      this.setState({\n        taskList: newList,\n        task: ''\n      });\n      let day = new Date();\n      let i = 0;\n      let lenOfTasks;\n      let isPresent = 0;\n      this.user = JSON.parse(localStorage.getItem(this.props.username));\n      lenOfTasks = this.user.today.length;\n\n      if (lenOfTasks === 7) {\n        this.user.today.shift();\n      }\n\n      console.log(this.user.today);\n      console.log(lenOfTasks); //i=lenOfTasks\n\n      while (i < lenOfTasks) {\n        //   if(day!=this.user.today[i].date)\n        i++; //   else\n        //   {\n        //     isPresent=1;\n        //     break;\n        //   }\n      }\n\n      this.user.today[i - 1].date.push(this.state.date);\n      this.user.today[i - 1].startTime.push((this.state.endtime - this.state.starttime) / 60000);\n      this.user.today[i - 1].endTime.push(this.state.endtime);\n      this.user.today[i - 1].tasks.push(this.state.task);\n      localStorage.setItem(this.props.username, JSON.stringify(this.user));\n    };\n  }\n\n  render() {\n    let user1 = JSON.parse(localStorage.getItem(this.props.username));\n    console.log(this.user);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inp\",\n      placeholder: \"Enter activity\",\n      onChange: event => this.inputChangeHandler(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Enter start time\"), React.createElement(TimePickerComponent, {\n      onChange: this.onChange,\n      value: this.state.starttime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), \"  */}\", React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Enter end time\"), React.createElement(TimePickerComponent, {\n      onChange: this.onChangeEnd,\n      value: this.state.starttime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Enter date\"), React.createElement(DatePicker, {\n      dateFormat: \"dd-MM-yyyy\",\n      selected: this.state.date,\n      value: this.state.date,\n      onChange: this.handleChangedate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"btn1\",\n      type: \"submit\",\n      onClick: () => this.btnAddHandler(this.state.task, this.state.starttime, this.state.endtime),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, user1.today.map((item, key) => {\n      return item.tasks.map((item1, key) => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Date:\"), item.date, \"\\xA0\\xA0\\xA0\\xA0\\xA0  \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Task\"), \":\", item1, \"\\xA0\\xA0\\xA0  \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"duration\"), \":\", item.startTime[key]);\n      });\n    })));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/home/mohitha/Desktop/assignment/src/components/input.js"],"names":["React","Component","TimePickerComponent","DatePicker","Signup","Input","state","task","taskList","starttime","endtime","date","Date","onChange","event","setState","target","value","onChangeEnd","inputChangeHandler","input","handleChangedate","btnAddHandler","inputTask","inputTime","item","diff","newList","day","i","lenOfTasks","isPresent","user","JSON","parse","localStorage","getItem","props","username","today","length","shift","console","log","push","startTime","endTime","tasks","setItem","stringify","render","user1","map","key","item1"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n//mport Timepicker from 'react-time-picker'\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\n import DatePicker from 'react-datepicker';\n import 'react-datepicker/dist/react-datepicker.css';\nimport Signup from './Signup/Signup'\n//import moment from 'moment'\nimport './input.css'\nclass Input extends Component{\n    state={\n        task:'',\n        taskList:[],\n        starttime:\"10:00\",\n        endtime:\"10:00\",\n        date:new Date()\n      };\n      onChange = event => \n      {\n          this.setState({ starttime:event.target.value })\n      }\n    //   onChange = starttime => \n    //   {\n    //       this.setState({ starttime })\n    \n    //   }\n      onChangeEnd = event => \n      {\n          this.setState({ endtime:event.target.value })\n      }\n    //   onChangeEnd = endtime => \n    //   {\n    //       this.setState({ endtime})\n    //   }\n      inputChangeHandler = (input)=>{\n          this.setState({\n            task: input\n          });\n      }\n      handleChangedate=date=>\n      {\n        this.setState({date:date})\n      }\n      btnAddHandler = (inputTask,inputTime,endtime)=>{\n       \n        let item = {\n          value: inputTask,\n          starttime: inputTime,\n          endtime:endtime,\n          diff:endtime-inputTime\n        }\n        let newList = [\n            ...this.state.taskList,\n            item\n          ]\n        \n          this.setState({\n            taskList:newList,\n            task: '',\n\n          })\n      let day=new Date();\n      let i=0;\n      let lenOfTasks;\n      let isPresent=0;\n      this.user=JSON.parse(localStorage.getItem(this.props.username));\n      lenOfTasks=this.user.today.length;\n      if(lenOfTasks===7)\n      {\n        this.user.today.shift()\n      }\n      console.log(this.user.today)\n      console.log(lenOfTasks)\n      //i=lenOfTasks\n       while(i<lenOfTasks){\n      //   if(day!=this.user.today[i].date)\n         i++;\n      //   else\n      //   {\n      //     isPresent=1;\n      //     break;\n      //   }\n       }\n      \n       this.user.today[i-1].date.push(this.state.date);\n       this.user.today[i-1].startTime.push((this.state.endtime-this.state.starttime)/60000)\n       this.user.today[i-1].endTime.push(this.state.endtime)\n       this.user.today[i-1].tasks.push(this.state.task)\n     localStorage.setItem(this.props.username,JSON.stringify(this.user))\n      \n\n      }\n    render()\n    {\n      let user1=JSON.parse(localStorage.getItem(this.props.username))\n      console.log(this.user)\n        return(\n            <div>\n                <input type=\"text\" id=\"inp\" placeholder=\"Enter activity\" onChange={(event)=>this.inputChangeHandler(event.target.value)}/><br></br>\n                <label>Enter start time</label>\n                  <TimePickerComponent\n                onChange={this.onChange}\n                value={this.state.starttime}> </TimePickerComponent><br></br>  */}\n                {/* <input type=\"time\"\n                onChange={this.onChange}\n                value={this.state.starttime}/><br></br> */}\n                <label>Enter end time</label>\n                <TimePickerComponent\n                onChange={this.onChangeEnd}\n                value={this.state.starttime}/>\n                {/* <input type=\"time\"\n                onChange={this.onChangeEnd}\n                value={this.state.endtime}/><br></br> */}\n                <label>Enter date</label>\n                <DatePicker dateFormat='dd-MM-yyyy' selected={this.state.date} value={this.state.date} onChange={this.handleChangedate} /><br/><br/> \n                <button id=\"btn1\"\n                type=\"submit\"\n                onClick={()=> this.btnAddHandler(this.state.task,this.state.starttime,this.state.endtime)} >Add</button>\n                <ul>\n              {user1.today.map((item,key)=>{\n                return item.tasks.map((item1,key)=>{\n                return <li> <strong>Date:</strong>{item.date}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <strong>Task</strong>:{item1}&nbsp;&nbsp;&nbsp;  <strong>duration</strong>:{item.startTime[key]}</li>})\n                \n                }\n              )}\n              </ul>\n            </div>\n        )\n    }\n}\nexport default Input"]},"metadata":{},"sourceType":"module"}