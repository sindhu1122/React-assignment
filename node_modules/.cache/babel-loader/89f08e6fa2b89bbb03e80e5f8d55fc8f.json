{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callIfDefined = exports.getAmPmLabels = exports.max = exports.min = void 0;\n\nvar _dateFormatter = require(\"./dateFormatter\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar isValidNumber = function isValidNumber(a) {\n  return typeof a === 'number' && !isNaN(a);\n};\n\nvar min = function min() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return Math.min.apply(Math, _toConsumableArray(args.filter(isValidNumber)));\n};\n\nexports.min = min;\n\nvar max = function max() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return Math.max.apply(Math, _toConsumableArray(args.filter(isValidNumber)));\n};\n\nexports.max = max;\nvar nines = ['9', 'Ù©'];\nvar ninesRegExp = new RegExp(\"[\".concat(nines.join(''), \"]\"));\nvar amPmFormatter = (0, _dateFormatter.getFormatter)({\n  hour: 'numeric'\n});\n\nvar getAmPmLabels = function getAmPmLabels(locale) {\n  var amString = amPmFormatter(locale, new Date(2017, 0, 1, 9));\n  var pmString = amPmFormatter(locale, new Date(2017, 0, 1, 21));\n\n  var _amString$split = amString.split(ninesRegExp),\n      _amString$split2 = _slicedToArray(_amString$split, 2),\n      am1 = _amString$split2[0],\n      am2 = _amString$split2[1];\n\n  var _pmString$split = pmString.split(ninesRegExp),\n      _pmString$split2 = _slicedToArray(_pmString$split, 2),\n      pm1 = _pmString$split2[0],\n      pm2 = _pmString$split2[1];\n\n  if (pm2 !== undefined) {\n    // If pm2 is undefined, nine was not found in pmString - this locale is not using 12-hour time\n    if (am1 !== pm1) {\n      return [am1, pm1].map(function (el) {\n        return el.trim();\n      });\n    }\n\n    if (am2 !== pm2) {\n      return [am2, pm2].map(function (el) {\n        return el.trim();\n      });\n    }\n  } // Fallback\n\n\n  return ['AM', 'PM'];\n};\n/**\n * Calls a function, if it's defined, with specified arguments\n * @param {Function} fn\n * @param {Object} args\n */\n\n\nexports.getAmPmLabels = getAmPmLabels;\n\nvar callIfDefined = function callIfDefined(fn) {\n  if (fn && typeof fn === 'function') {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    fn.apply(void 0, args);\n  }\n};\n\nexports.callIfDefined = callIfDefined;","map":{"version":3,"sources":["/home/mohitha/Desktop/assignment/node_modules/react-time-picker/dist/shared/utils.js"],"names":["Object","defineProperty","exports","value","callIfDefined","getAmPmLabels","max","min","_dateFormatter","require","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","prototype","toString","call","from","arr2","isValidNumber","a","isNaN","_len","arguments","args","_key","Math","apply","filter","_len2","_key2","nines","ninesRegExp","RegExp","concat","join","amPmFormatter","getFormatter","hour","locale","amString","Date","pmString","_amString$split","split","_amString$split2","am1","am2","_pmString$split","_pmString$split2","pm1","pm2","map","el","trim","fn","_len3","_key3"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callIfDefined = exports.getAmPmLabels = exports.max = exports.min = void 0;\n\nvar _dateFormatter = require(\"./dateFormatter\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar isValidNumber = function isValidNumber(a) {\n  return typeof a === 'number' && !isNaN(a);\n};\n\nvar min = function min() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return Math.min.apply(Math, _toConsumableArray(args.filter(isValidNumber)));\n};\n\nexports.min = min;\n\nvar max = function max() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return Math.max.apply(Math, _toConsumableArray(args.filter(isValidNumber)));\n};\n\nexports.max = max;\nvar nines = ['9', 'Ù©'];\nvar ninesRegExp = new RegExp(\"[\".concat(nines.join(''), \"]\"));\nvar amPmFormatter = (0, _dateFormatter.getFormatter)({\n  hour: 'numeric'\n});\n\nvar getAmPmLabels = function getAmPmLabels(locale) {\n  var amString = amPmFormatter(locale, new Date(2017, 0, 1, 9));\n  var pmString = amPmFormatter(locale, new Date(2017, 0, 1, 21));\n\n  var _amString$split = amString.split(ninesRegExp),\n      _amString$split2 = _slicedToArray(_amString$split, 2),\n      am1 = _amString$split2[0],\n      am2 = _amString$split2[1];\n\n  var _pmString$split = pmString.split(ninesRegExp),\n      _pmString$split2 = _slicedToArray(_pmString$split, 2),\n      pm1 = _pmString$split2[0],\n      pm2 = _pmString$split2[1];\n\n  if (pm2 !== undefined) {\n    // If pm2 is undefined, nine was not found in pmString - this locale is not using 12-hour time\n    if (am1 !== pm1) {\n      return [am1, pm1].map(function (el) {\n        return el.trim();\n      });\n    }\n\n    if (am2 !== pm2) {\n      return [am2, pm2].map(function (el) {\n        return el.trim();\n      });\n    }\n  } // Fallback\n\n\n  return ['AM', 'PM'];\n};\n/**\n * Calls a function, if it's defined, with specified arguments\n * @param {Function} fn\n * @param {Object} args\n */\n\n\nexports.getAmPmLabels = getAmPmLabels;\n\nvar callIfDefined = function callIfDefined(fn) {\n  if (fn && typeof fn === 'function') {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    fn.apply(void 0, args);\n  }\n};\n\nexports.callIfDefined = callIfDefined;"]},"metadata":{},"sourceType":"script"}