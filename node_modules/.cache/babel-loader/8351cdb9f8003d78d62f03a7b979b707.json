{"ast":null,"code":"var _jsxFileName = \"/home/mohitha/Desktop/assignment/src/components/input.js\";\nimport React, { Component } from 'react'; //mport Timepicker from 'react-time-picker'\n\nimport Signup from './Signup/Signup'; //import moment from 'moment'\n\nimport './input.css';\n\nclass Input extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      activity: {\n        activities: [],\n        duration: 0\n      },\n      task: '',\n      taskList: [],\n      starttime: \"10:00\",\n      endtime: \"10:00\",\n      diff: 0\n    };\n\n    this.onChange = event => {\n      this.setState({\n        starttime: event.target.value\n      });\n    };\n\n    this.onChangeEnd = event => {\n      this.setState({\n        endtime: event.target.value\n      });\n    };\n\n    this.inputChangeHandler = input => {\n      this.setState({\n        task: input\n      });\n    };\n\n    this.btnAddHandler = (inputTask, inputTime, endtime) => {\n      let item = {\n        value: inputTask,\n        starttime: inputTime,\n        endtime: endtime,\n        diff: endtime - inputTime\n      };\n      let newList = [...this.state.taskList, item];\n      this.state.activity.activities.push(inputTask);\n      this.setState({\n        taskList: newList,\n        task: ''\n      });\n      this.documentData = JSON.parse(localStorage.getItem('userdetails'));\n      this.setState({\n        username: this.documentData.username\n      });\n      console.log(this.documentData[0].username);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inp\",\n      placeholder: \"Enter activity\",\n      onChange: event => this.inputChangeHandler(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Enter start time\"), React.createElement(\"input\", {\n      type: \"time\",\n      onChange: this.onChange,\n      value: this.state.starttime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Enter end time\"), React.createElement(\"input\", {\n      type: \"time\",\n      onChange: this.onChangeEnd,\n      value: this.state.endtime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"btn1\",\n      type: \"submit\",\n      onClick: () => this.btnAddHandler(this.state.task, this.state.starttime, this.state.endtime),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.taskList.map((todo, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, todo.value, todo.diff))));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/home/mohitha/Desktop/assignment/src/components/input.js"],"names":["React","Component","Signup","Input","state","username","activity","activities","duration","task","taskList","starttime","endtime","diff","onChange","event","setState","target","value","onChangeEnd","inputChangeHandler","input","btnAddHandler","inputTask","inputTime","item","newList","push","documentData","JSON","parse","localStorage","getItem","console","log","render","map","todo","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n//mport Timepicker from 'react-time-picker'\nimport Signup from './Signup/Signup'\n//import moment from 'moment'\nimport './input.css'\nclass Input extends Component{\n    state={\n      username:\"\",\n        activity:{\n          \n            activities:[],\n            duration:0\n          \n        },\n        task:'',\n        taskList:[],\n        starttime:\"10:00\",\n        endtime:\"10:00\",\n        diff:0\n      };\n      onChange = event => \n      {\n          this.setState({ starttime:event.target.value })\n      }\n    //   onChange = starttime => \n    //   {\n    //       this.setState({ starttime })\n    //   }\n      onChangeEnd = event => \n      {\n          this.setState({ endtime:event.target.value })\n      }\n    //   onChangeEnd = endtime => \n    //   {\n    //       this.setState({ endtime})\n    //   }\n      inputChangeHandler = (input)=>{\n          this.setState({\n            task: input\n          });\n      }\n      btnAddHandler = (inputTask,inputTime,endtime)=>{\n       \n        let item = {\n          value: inputTask,\n          starttime: inputTime,\n          endtime:endtime,\n          diff:endtime-inputTime\n        }\n        let newList = [\n            ...this.state.taskList,\n            item\n          ]\n        \n            this.state.activity.activities.push(inputTask)\n        \n          this.setState({\n            taskList:newList,\n            task: '',\n\n          })\n        \n        this.documentData = JSON.parse(localStorage.getItem('userdetails'))\n        this.setState({\n          username:this.documentData.username,\n        \n           \n        })\n        console.log(this.documentData[0].username)\n      }\n    render()\n    {\n        return(\n            <div>\n                <input type=\"text\" id=\"inp\" placeholder=\"Enter activity\" onChange={(event)=>this.inputChangeHandler(event.target.value)}/><br></br>\n                <label>Enter start time</label>\n                 {/* <Timepicker \n                onChange={this.onChange}\n                value={this.state.starttime}> </Timepicker><br></br>  */}\n                <input type=\"time\"\n                onChange={this.onChange}\n                value={this.state.starttime}/><br></br>\n                <label>Enter end time</label>\n                {/* <Timepicker\n                onChange={this.onChangeEnd}\n                value={this.state.starttime}/> */}\n                <input type=\"time\"\n                onChange={this.onChangeEnd}\n                value={this.state.endtime}/><br></br>\n                <button id=\"btn1\"\n                type=\"submit\"\n                onClick={()=> this.btnAddHandler(this.state.task,this.state.starttime,this.state.endtime)} >Add</button>\n                <div>\n              {this.state.taskList.map((todo,index) =>\n              <div>{todo.value}{todo.diff}</div>\n              )}\n              </div>\n            </div>\n        )\n    }\n}\nexport default Input"]},"metadata":{},"sourceType":"module"}